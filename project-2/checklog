#!/usr/bin/python3

import sys
import hashlib
import base64

if len(sys.argv) > 1:
    print("Usage: checklog", file = sys.stderr)
    exit(1)

try: 
    log = open("log.txt", "r")

except:
    print("Error: log.txt not found.", file = sys.stderr)
    exit(1)

try:
    loghead = open("loghead.txt", "r")

except:
    print("Error: loghead.txt not found.", file = sys.stderr)
    exit(1)

log = open("log.txt", "r")
first_line = log.readline()
first_line = first_line.replace('\n', '')
if first_line.split()[2] != "begin":
    print("failed: error on line 1", file = sys.stderr)
    exit(1)

sha256_hash = hashlib.sha256(first_line.encode()).digest()
hash_prev = base64.b64encode(sha256_hash).decode()

line = log.readline()
line = line.replace("\n", "")
line_counter = 1
while line:
    hash_current = line.split()[2]

    if hash_current != hash_prev:
        print(f"failed: error on first line", file = sys.stderr)
        exit(1)

    sha256_hash = hashlib.sha256(line.encode()).digest()
    hash_prev = base64.b64encode(sha256_hash).decode()
    line = log.readline()
    line = line.replace("\n", "")
    line_counter += 1

loghead = open("loghead.txt", "r")
if hash_prev != loghead.read():
    print(f"failed: hash of last line (line {line_counter}) does not match log head.", file = sys.stderr)
    exit(1)

print("valid")
exit(0)